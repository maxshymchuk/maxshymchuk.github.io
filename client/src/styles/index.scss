@use 'variables' as *;
@use 'mixins';
@use 'reset';
@use 'modificators';
@use 'aside';
@use 'header';
@use 'main';

.content {
    animation: 0.1s linear 1 forwards fade-in;
    min-height: inherit;

    .grid {
        display: grid;
        margin: 0 auto;
        max-width: 1000px;
        grid-template-columns: auto auto 1fr auto;
        grid-template-rows: max-content;
        grid-template-areas:
            '. aside header .'
            '. aside main .';
        gap: $spacing-unit-default;
        min-height: inherit;

        @media screen and (max-width: $breakpoint-sm) {
            grid-template-areas:
                '. header .'
                '. main .';

            aside {
                display: none;
            }
        }

        & > * {
            min-width: 0;
        }

        aside {
            grid-area: aside;
        }

        header {
            grid-area: header;
        }

        main {
            grid-area: main;
        }

        @media print {
            @include mixins.flex(column, $spacing-unit-default);
        }
    }
}
